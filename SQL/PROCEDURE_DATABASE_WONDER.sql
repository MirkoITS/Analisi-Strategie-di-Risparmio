CREATE OR ALTER PROCEDURE DWH_WONDER_PER_ANALISI_PROCEDURE AS 
BEGIN
	SET NOCOUNT ON;  -- Sopprime i messaggi di conteggio delle righe interessate


	-- Verifica l'esistenza del database DWH_WONDER_FF_MP e, se non esiste, lo crea
	IF NOT EXISTS (SELECT 1 FROM sys.databases WHERE name = 'DWH_WONDER_ANALISI')
		CREATE DATABASE DWH_WONDER_ANALISI;


	-- INIZIO  facts_telemetry

	-- Verifica l'esistenza della tabella facts_telemetry nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp];

	CREATE TABLE [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp] (
		__RECNO__ BIGINT IDENTITY(1,1) PRIMARY KEY
		,TRANSACTION_ID VARCHAR(100)
		,READING_TIMESTAMP DATETIME
		,LOTTOPR VARCHAR(10)
		,DESLAV CHAR(40)
		,DESART VARCHAR(200)
		,MACC VARCHAR(15)
		,PARAMETER_NAME varchar(50)
		,PARAMETER_VALUE varchar(50)
		,OPERAT CHAR(40)
	);

	INSERT INTO [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp] (
		TRANSACTION_ID,
		READING_TIMESTAMP,
		LOTTOPR,
		DESLAV,
		DESART,
		MACC,
		PARAMETER_NAME,
		PARAMETER_VALUE,
		OPERAT
	)
	SELECT 
		TEL.TRANSACTION_ID
		,TEL.READING_TIMESTAMP
		,TEL.LOTTOPR
		,C.DESLAV
		,ART.DESART
		,TEL.MACC
		,TEL.PARAMETER_NAME
		,TEL.PARAMETER_VALUE
		,COALESCE(
			TEL.OPERAT,
			LAG(TEL.OPERAT) OVER (
				PARTITION BY TEL.MACC
				ORDER BY TEL.READING_TIMESTAMP DESC
			),
			'N.A.'
		) AS DESOPE
	FROM [TS_WND].[dbo].[TELEMETRY_CHANGES] AS TEL
		LEFT JOIN [TS_WND].[dbo].[CICLI] AS C
			ON TEL.LOTTOPR = C.LOTTOPR
				AND TEL.CODART = C.CODART
				AND TEL.FASE = C.FASE
		LEFT JOIN [TS_WND].[dbo].[ARTICOLI] AS ART
			ON TEL.CODART = ART.CODART  
	WHERE TEL.DATASTATE = 'Good' AND TEL.MACC <> ''
		AND PARAMETER_VALUE <> ''
		AND ART.LOTTOPR = '0000000000';
		

	-- INIZIO  DIM_LOTTIPR
	
	-- Verifica l'esistenza della tabella DIM_LOTTIPR nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR_temp]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR_temp];

	CREATE TABLE [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR_temp] (
		LOTTOPR CHAR(10) PRIMARY KEY
		,DESART VARCHAR(200)
		,TIPART CHAR(1)
		,SCADENZA DATE
		,DATINIPRO DATETIME
		,DATFINPRO DATETIME
	);

	INSERT INTO [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR_temp] (
		LOTTOPR,
		DESART,
		TIPART,
		SCADENZA,
		DATINIPRO,
		DATFINPRO
	)
	SELECT
		LPR.LOTTOPR
		,RTRIM(ART.DESART +' '+ ART.DESESTESA) AS DESART
		,ART.TIPART
		,CAST(LPR.SCADENZA AS DATE) AS SCADENZA
		,LPR.DATINIPRO
		,LPR.DATFINPRO
	FROM [TS_WND].[dbo].[LOTTIPR] AS LPR
	LEFT JOIN [TS_WND].[dbo].[ARTICOLI] AS ART
		ON LPR.CODART = ART.CODART
	WHERE ART.LOTTOPR = '0000000000'
		AND LPR.LOTTOPR IN(SELECT DISTINCT LOTTOPR FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp])
		AND LPR.DATINIPRO IS NOT NULL AND LPR.DATFINPRO IS NOT NULL
		AND LPR.DATINIPRO >= (
			SELECT MIN(READING_TIMESTAMP)
			FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp]
		)
	GROUP BY
		LPR.LOTTOPR
		,ART.DESART
		,ART.DESESTESA
		,ART.TIPART
		,LPR.SCADENZA
		,LPR.DATINIPRO
		,LPR.DATFINPRO; 

	-- FINE  DIM_LOTTIPR

	
	-- Filtra la tabella telemetry, eliminado i lotti che non servono
	DELETE FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp]
	WHERE LOTTOPR NOT IN(SELECT LOTTOPR FROM [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR_temp]);

	-- Verifica l'esistenza della tabella facts_telemetry nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[facts_telemetry]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[facts_telemetry];

	select * 
	INTO [DWH_WONDER_ANALISI].[dbo].[facts_telemetry]
	FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp]
	WHERE MACC NOT IN('CNC08', 'HAL11', 'HAL16', 'IND01', 'IND02', 'TRF10')
		AND PARAMETER_NAME IN('Pressione', 'Temperatura', 'Velocità', 'TEMPERATURA_GRADI')
		OR PARAMETER_NAME LIKE 'DIFETTO%' OR PARAMETER_NAME LIKE 'READ%'
		OR PARAMETER_NAME LIKE 'SET%' OR PARAMETER_NAME LIKE 'PEZZO%'
	
	--elimina la tabella temporanea
	Drop table [DWH_WONDER_ANALISI].[dbo].[facts_telemetry_temp]
	--vedere se va e quanto ci mette

	--Verifica l'esistenza della tabella DIM_LOTTIPR nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR];
	
	select *
	into [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR]
	from [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR_temp]
	wHERE LOTTOPR IN (SELECT DISTINCT(LOTTOPR) FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry]);

	--elimina la tabella temporanea
	drop table [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR_temp]

	
	-- FINE  facts_telemetry
	-- INIZIO  Dim_macchine

	-- Verifica l'esistenza della tabella Dim_macchine nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[Dim_macchine]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_macchine];

	CREATE TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_macchine] (
		MACC CHAR(15) PRIMARY KEY
		,DESMACC CHAR(40)
		,DESREP CHAR(40)
	);

	INSERT INTO [DWH_WONDER_ANALISI].[dbo].[Dim_macchine] (MACC, DESMACC, DESREP)
	SELECT
		M.MACC
		,M.DESMACC
		,CASE M.CODREP
			WHEN '' THEN 'N.A.'
			ELSE REP.DESREP
		END AS DESREP
	FROM [TS_WND].[dbo].[MACCHINE] AS M
	LEFT JOIN [TS_WND].[dbo].[TABREP] AS REP
		ON M.CODREP = REP.CODREP
	WHERE M.MACC IN(SELECT DISTINCT MACC FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry]);

	-- FINE  Dim_macchine
	-- INIZIO  Dim_matprime

	-- Verifica l'esistenza della tabella Dim_matprime nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[Dim_matprime]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_matprime];

	CREATE TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_matprime] (
		__RECNO__ BIGINT IDENTITY(1,1) PRIMARY KEY
		,LOTTOPR CHAR(10)
		,DESLAV CHAR(40)  -- DESLAV
		,DESART CHAR(200)
		,DESMATP CHAR(40)
	);

	INSERT INTO [DWH_WONDER_ANALISI].[dbo].[Dim_matprime] (LOTTOPR, DESLAV, DESART, DESMATP)
	SELECT
		D.LOTTOPR
		,C.DESLAV
		,RTRIM(ART.DESART +' '+ ART.DESESTESA) AS DESART
		,CASE MP.DESMATP
			WHEN '' THEN 'N.A.'
			WHEN NULL THEN 'N.A.'
			ELSE MP.DESMATP
		END AS DESMATP
	FROM [TS_WND].[dbo].[DISTBASE] AS D
	LEFT JOIN [TS_WND].[dbo].[MATPRIME] AS MP
		ON D.CODCOMP = MP.CODMATP
	LEFT JOIN [TS_WND].[dbo].[CICLI] AS C
			ON D.LOTTOPR = C.LOTTOPR
				AND D.CODART = C.CODART
				AND D.FASE = C.FASE
	LEFT JOIN [TS_WND].[dbo].[ARTICOLI] AS ART
		ON D.CODART = ART.CODART
	WHERE ART.LOTTOPR = '0000000000'
		AND D.TIPOCOMP = 'M'
		AND D.LOTTOPR IN(SELECT LOTTOPR FROM [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR]);

	-- FINE  Dim_matprime
	-- INIZIO  Dim_prod

	-- Verifica l'esistenza della tabella Dim_prod nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[Dim_prod]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_prod];

	CREATE TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_prod] (
		__RECNO__ BIGINT IDENTITY(1,1) PRIMARY KEY
		,LOTTOPR CHAR(10)
		,DATA DATE
		,QUANT FLOAT
		,QUANTSC FLOAT
		,DESCDS CHAR(40)
	);

	INSERT INTO [DWH_WONDER_ANALISI].[dbo].[Dim_prod] (LOTTOPR, DATA, QUANT, QUANTSC, DESCDS)
	SELECT
		RQ.LOTTOPR
		,CAST(RQ.DATA AS DATE) AS DATA
		,SUM(
			CASE
				WHEN RQ.CODCDS = '' THEN RQ.QUANT
				ELSE 0
			END
		) AS QUANT
		,SUM(
			CASE
				WHEN RQ.CODCDS <> '' THEN RQ.QUANT
				ELSE 0
			END
		) AS QUANTSC
		,CASE RQ.CODCDS
			WHEN '' THEN 'N.A.'
			ELSE TCS.DESCDS
		END AS DESCDS
	FROM [TS_WND].[dbo].[RESQUANT] AS RQ
	LEFT JOIN [TS_WND].[dbo].[TABCSCAR] AS TCS
		ON RQ.CODCDS = TCS.CODCDS
	WHERE RQ.LOTTOPR IN(SELECT LOTTOPR FROM [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR])
		AND RQ.DATA BETWEEN (
				SELECT MIN(READING_TIMESTAMP)
				FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry]
			)
			AND
			(
				SELECT MAX(READING_TIMESTAMP)
				FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry]
			)
	GROUP BY
		RQ.LOTTOPR
		,RQ.DATA
		,RQ.CODCDS
		,TCS.DESCDS
	HAVING SUM(CASE WHEN RQ.CODCDS = '' THEN RQ.QUANT ELSE 0 END) <> 0
		OR SUM(CASE WHEN RQ.CODCDS <> '' THEN RQ.QUANT ELSE 0 END) <> 0
	ORDER BY RQ.LOTTOPR, RQ.DATA;


	WITH recursive_CTE AS (
		SELECT
			__RECNO__
			,DATA
			,LOTTOPR
			,QUANT
			,ROW_NUMBER() OVER (PARTITION BY LOTTOPR ORDER BY DATA DESC) AS RN
		FROM [DWH_WONDER_ANALISI].[dbo].[Dim_prod]
	)

	,recursive_result AS (
		SELECT
			__RECNO__
			,DATA
			,LOTTOPR
			,CASE
				WHEN QUANT < 0 THEN 0
				ELSE QUANT
			END AS QUANT
			,RN
			,QUANT AS running_sum
		FROM recursive_CTE
		WHERE RN = (SELECT MIN(RN) FROM recursive_CTE WHERE QUANT < 0)

		UNION ALL

		SELECT
			RC.__RECNO__
			,RC.DATA
			,RC.LOTTOPR
			,CASE
				WHEN RC.QUANT = 0 THEN 0
				WHEN RR.running_sum + RC.QUANT >= 0 THEN RR.running_sum + RC.QUANT
				ELSE 0
			END AS QUANT
			,RC.RN
			,CASE
				WHEN RR.running_sum + RC.QUANT < 0 THEN RR.running_sum + RC.QUANT
				ELSE 0
			END AS running_sum
		FROM recursive_CTE AS RC
		INNER JOIN recursive_result AS RR
			ON RC.LOTTOPR = RR.LOTTOPR
			AND RC.RN = RR.RN + 1
	)


	UPDATE DPROD
	SET DPROD.QUANT = RR.QUANT
	FROM [DWH_WONDER_ANALISI].[dbo].[Dim_prod] AS DPROD
	RIGHT JOIN recursive_result AS RR
		ON DPROD.__RECNO__ = RR.__RECNO__
	OPTION(MAXRECURSION 0);

	DELETE FROM [DWH_WONDER_ANALISI].[dbo].[Dim_prod]
	WHERE QUANT = 0 AND QUANTSC = 0;

	-- FINE  Dim_prod
	-- INIZIO  Dim_grumacc

	-- Verifica l'esistenza della tabella Dim_grumacc nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[Dim_grumacc]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_grumacc];

	CREATE TABLE [DWH_WONDER_ANALISI].[dbo].[Dim_grumacc] (
		__RECNO__ BIGINT IDENTITY(1,1) PRIMARY KEY
		,MACC CHAR(15)
		,GRUMACC CHAR(15)
	);

	INSERT INTO [DWH_WONDER_ANALISI].[dbo].[Dim_grumacc] (MACC, GRUMACC)
	SELECT
		MACC
		,GRUMACC
	FROM [TS_WND].[dbo].DETGRMAC
	WHERE MACC IN(SELECT MACC FROM [DWH_WONDER_ANALISI].[dbo].[Dim_macchine]);

	-- FINE  Dim_grumacc
	-- INIZIO  DIM_FERM


	-- Verifica l'esistenza della tabella DIM_FERM nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[DIM_FERM]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[DIM_FERM];

	CREATE TABLE [DWH_WONDER_ANALISI].[dbo].[DIM_FERM] (
		__RECNO__ BIGINT IDENTITY(1,1) PRIMARY KEY
		,MACC VARCHAR(15)
		,LOTTOPR VARCHAR(10)
		,DESLAV CHAR(40)
		,DESOPE CHAR(40)
		,TMACC FLOAT
		,TLOT FLOAT
		,POPER BIT
		,QPROD FLOAT
		,QSC FLOAT
		,INI DATETIME
		,FIN DATETIME
		,DESFERM CHAR(40)
	);

	WITH FERM_CTE AS (
		SELECT
			RT.MACC
			,RT.LOTTOPR
			,C.DESLAV
			,COALESCE(
				RT.OPERAT,
				LAG(RT.OPERAT) OVER (
					PARTITION BY RT.MACC
					ORDER BY RT.DATA DESC, RT.INI DESC
				),
				'N.A.'
			) AS OPERAT
			,RT.TMACC
			,RT.TLOT
			,CAST(RT.TOPER AS BIT) AS POPER  
			,RT.QPROD
			,RT.QSCPR + RT.QSCLA AS QSC
			,RT.DATA
			,RT.INI
			,RT.FIN
			,ISNULL(TCF.DESFERM, 'PRODUZIONE') AS DESFERM
		FROM [TS_WND].[dbo].[RESTURNI] as RT
		LEFT JOIN [TS_WND].[dbo].[TABCFER] AS TCF
			ON RT.CODFERM = TCF.CODFERM
		LEFT JOIN [TS_WND].[dbo].[LOTTIPR] AS LPR
			ON RT.LOTTOPR = LPR.LOTTOPR
		LEFT JOIN [TS_WND].[dbo].[CICLI] AS C
			ON RT.LOTTOPR = C.LOTTOPR
			AND LPR.CODART = C.CODART
			AND RT.FASE = C.FASE
		 WHERE RT.LOTTOPR IN(SELECT LOTTOPR FROM [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR])
		    AND RT.MACC IN(SELECT MACC FROM [DWH_WONDER_ANALISI].[dbo].[Dim_macchine])
			AND QPROD >= 0
	)


	INSERT INTO [DWH_WONDER_ANALISI].[dbo].[DIM_FERM] (
		MACC,
		LOTTOPR,
		DESLAV,
		DESOPE,
		TMACC,
		TLOT,
		POPER,
		QPROD,
		QSC,
		INI,
		FIN,
		DESFERM
	)
	SELECT
		MACC
		,LOTTOPR
		,DESLAV
		,OPERAT
		,TMACC
		,TLOT
		,POPER
		,QPROD
		,QSC
		,DATEADD(
			MINUTE,
			CAST(LEFT(INI, 2) AS INT) * 60 + CAST(RIGHT(INI, 2) AS INT),
			DATA
		) AS INI
		,DATEADD(
			MINUTE,
			CAST(LEFT(FIN, 2) AS INT) * 60 + CAST(RIGHT(FIN, 2) AS INT),
			DATA
		) AS FIN
		,DESFERM
	FROM FERM_CTE
	WHERE DATA BETWEEN (
			SELECT MIN(READING_TIMESTAMP)
			FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry]
		)
		AND
		(
			SELECT MAX(READING_TIMESTAMP)
			FROM [DWH_WONDER_ANALISI].[dbo].[facts_telemetry]
		);

	-- FINE  DIM_FERM
	-- INIZIO DIM_RESA

	-- Verifica l'esistenza della tabella DIM_RESA nel database DWH_WONDER_FF_MP e, se presente, la elimina
	IF OBJECT_ID('[DWH_WONDER_ANALISI].[dbo].[[DIM_RESA]]', 'U') IS NOT NULL
		DROP TABLE [DWH_WONDER_ANALISI].[dbo].[DIM_RESA];

	WITH CICLOREA_CTE AS (
		SELECT
			LOTTOPR
			,MACC
			,FASE
			,CODART
			,SUM(TLOT) / CASE SUM(QPROD + QSCPR + QSCLA)
				WHEN 0 THEN 1
				ELSE SUM(QPROD + QSCPR + QSCLA)
			END AS CICLOREA
		FROM [TS_WND].[dbo].[RESTEMPI]
		GROUP BY
			LOTTOPR
			,MACC
			,FASE
			,CODART
			,CODFERM
		HAVING LOTTOPR IN(SELECT LOTTOPR FROM [DWH_WONDER_ANALISI].[dbo].[DIM_LOTTIPR])
			AND SUM(QPROD + QSCPR + QSCLA) <> 0
			AND CODFERM = '99'
	)


	SELECT
		CR.LOTTOPR
		,CR.MACC
		,C.DESLAV
		,ROUND(C.CICLOTEO / CASE CR.CICLOREA
			WHEN 0 THEN 1
			ELSE CR.CICLOREA
		END * 100.0, 2) AS 'RESA (%)'
	INTO [DWH_WONDER_ANALISI].[dbo].[DIM_RESA]
	FROM CICLOREA_CTE AS CR
	INNER JOIN [TS_WND].[dbo].[CICLI] AS C
		ON CR.LOTTOPR = C.LOTTOPR
		AND CR.FASE = C.FASE
		AND CR.CODART = C.CODART;

	--FINE DIM_RESA
END;
GO

exec DWH_WONDER_PER_ANALISI_PROCEDURE